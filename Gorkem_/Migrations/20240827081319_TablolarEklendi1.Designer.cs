// <auto-generated />
using System;
using Gorkem_.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gorkem_.Migrations
{
    [DbContext(typeof(GorkemDbContext))]
    [Migration("20240827081319_TablolarEklendi1")]
    partial class TablolarEklendi1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktifmi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("T_Aktif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("T_Pasif")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KT_Birims");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Brans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktifmi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("T_Aktif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("T_Pasif")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KT_Branss");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Durum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktifmi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("T_Aktif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("T_Pasif")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KT_Durums");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Irk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktifmi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("T_Aktif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("T_Pasif")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KT_Irks");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_KopekTuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktifmi")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("T_Aktif")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("T_Pasif")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KT_KopekTurus");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_Hibe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdiSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HibeEdilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KopekKopekId")
                        .HasColumnType("int");

                    b.Property<int>("TelefonNumarasi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UT_Kopek_Hibes");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_Kopek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BirimRef")
                        .HasColumnType("int");

                    b.Property<int>("BransRef")
                        .HasColumnType("int");

                    b.Property<int>("CipNumarasi")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurumRef")
                        .HasColumnType("int");

                    b.Property<int?>("HibeId")
                        .HasColumnType("int");

                    b.Property<int>("IrkRef")
                        .HasColumnType("int");

                    b.Property<bool>("Karar")
                        .HasColumnType("bit");

                    b.Property<int>("KopekTuruRef")
                        .HasColumnType("int");

                    b.Property<int>("KuvveNumarasi")
                        .HasColumnType("int");

                    b.Property<string>("NihaiKanaat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SatinAlmaId")
                        .HasColumnType("int");

                    b.Property<string>("TeminSekli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("URETİMId")
                        .HasColumnType("int");

                    b.Property<string>("YapilanIslem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BirimRef");

                    b.HasIndex("BransRef");

                    b.HasIndex("DurumRef");

                    b.HasIndex("HibeId");

                    b.HasIndex("IrkRef");

                    b.HasIndex("KopekTuruRef");

                    b.HasIndex("SatinAlmaId");

                    b.HasIndex("URETİMId");

                    b.ToTable("UT_Kopek_Kopeks");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_SatinAlma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdiSoyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KopekKopekId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SatinAlmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TelefonNumarasi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UT_Kopek_SatinAlmas");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_Uretim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnneKopekRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BabaKopekRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KopekKopekId")
                        .HasColumnType("int");

                    b.Property<string>("KopekRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UT_Kopek_Uretims");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_Kopek", b =>
                {
                    b.HasOne("Gorkem_.Context.Entities.KT_Birim", "BIRIM")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("BirimRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gorkem_.Context.Entities.KT_Brans", "BRANS")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("BransRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gorkem_.Context.Entities.KT_Durum", "DURUM")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("DurumRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gorkem_.Context.Entities.UT_Kopek_Hibe", "Hibe")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("HibeId");

                    b.HasOne("Gorkem_.Context.Entities.KT_Irk", "IRK")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("IrkRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gorkem_.Context.Entities.KT_KopekTuru", "KOPEKTURU")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("KopekTuruRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gorkem_.Context.Entities.UT_Kopek_SatinAlma", "SatinAlma")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("SatinAlmaId");

                    b.HasOne("Gorkem_.Context.Entities.UT_Kopek_Uretim", "URETİM")
                        .WithMany("UT_Kopek_Kopek")
                        .HasForeignKey("URETİMId");

                    b.Navigation("BIRIM");

                    b.Navigation("BRANS");

                    b.Navigation("DURUM");

                    b.Navigation("Hibe");

                    b.Navigation("IRK");

                    b.Navigation("KOPEKTURU");

                    b.Navigation("SatinAlma");

                    b.Navigation("URETİM");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Birim", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Brans", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Durum", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_Irk", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.KT_KopekTuru", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_Hibe", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_SatinAlma", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });

            modelBuilder.Entity("Gorkem_.Context.Entities.UT_Kopek_Uretim", b =>
                {
                    b.Navigation("UT_Kopek_Kopek");
                });
#pragma warning restore 612, 618
        }
    }
}
